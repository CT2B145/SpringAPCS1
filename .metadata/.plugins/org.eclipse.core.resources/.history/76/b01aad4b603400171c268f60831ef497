package textExcel;

public class FormulaCell extends RealCell{
	private String formanswer;
	//private String[] fractionEquationHolder;
	private Spreadsheet sprdsheet;	//saves array from spreadsheet to access information from Spreadsheet
	private Cell[][] breadsheet;
	double answer;
	// Constructor for the fracEquationHolderCell class
	public FormulaCell (String enteredForm, Spreadsheet emptycell, Cell[][] breadsheet){
		// TODO divided between Cell [][] or Spreadsheet object. Everytime I try Cell[][] objects, getDoubleValue method fails to exist.
		super(enteredForm);							//constructor to fill super's String field (accesses by fullCellText)
		formanswer = enteredForm;		
		sprdsheet = emptycell;
		breadsheet = breadsheet;
	}

	public double sum(String total) { // adds the cells in the when SUM is requested
		String[] cellParts = total.split("-");
		double sum = 0;
		int rowBeg = Integer.parseInt(cellParts[0].substring(1));//numbers
		int rowEnd = Integer.parseInt(cellParts[1].substring(1));
		char colBeg = cellParts[0].charAt(0); // letters
		char colEnd = cellParts[1].charAt(0);
		for (char i = colBeg; i < colEnd; i++) {
			for (int j = rowBeg; j < rowEnd; j++) {
				SpreadsheetLocation breadsheetLoc = new SpreadsheetLocation(i + j + "");
				//sum += ((RealCell) sprdsheet.getCell(breadsheetLoc)).getDoubleValue();
				sum += ((RealCell) breadsheet[i][j]).getDoubleValue();
		}
		
	} // TODO Similiar to the issue below.
		return sum;
	}
	
	public double avg(String total) { // figures out the average of the lot
		String[] cellParts = total.split("-");
		int next = 0;
		double avgTotal = 0;
		String hold;
		int rowBeg = Integer.parseInt(cellParts[0].substring(1)); //numbers
		int rowEnd = Integer.parseInt(cellParts[1].substring(1));
		char colBeg = cellParts[0].charAt(0);// letters
	//	char colEnd = cellParts[1].charAt(0);
		char i = colBeg;
		//if(colBeg == colEnd){
			for (int j = rowBeg; j < rowEnd; j++) {
				SpreadsheetLocation breadsheetLoc = new SpreadsheetLocation(i+j+"");
				avgTotal += ((RealCell) breadsheet[i][j]).getDoubleValue();
				next++;
			//	TODO Here is the problem. next is not incrementing, nor is avgTotal recieving any data
				// TODO both are seeming stuck at 0.0
		}
	//}
		return avgTotal/next;	
	}
	@Override
	public double getDoubleValue() {
		String removepart = formanswer.substring(2,formanswer.length()-2);
		 String[] fracEquationHolder = removepart.split(" ",removepart.length()); // holds the fractions and operator
		  double operand;
	      double operand2;
		if (removepart.toUpperCase().indexOf("SUM")>=0){ //filters out SUM
//			String removepart1 = this.formanswer.substring(2,this.formanswer.length()-2);
//			return sum(removepart)+"";
			return sum(fracEquationHolder[1]);
		}else if (removepart.toUpperCase().indexOf("AVG")>=0) { //filters out AVG
//			String removepart1 = this.formanswer.substring(2,this.formanswer.length()-2);
//			return sum(removepart)+"";
			return avg(fracEquationHolder[1]);
		}else if (fracEquationHolder[0].substring(0,1).matches("[a-zA-Z]+")) { // um, using the famous Stackoverflow method
			// handles anything that has letter in one request
			SpreadsheetLocation breadsheetLoc = new SpreadsheetLocation(fracEquationHolder[0]);
			answer = ((RealCell) breadsheet[breadsheetLoc.getRow()][breadsheetLoc.getCol()]).getDoubleValue();
		}else{
			answer = Double.parseDouble(fracEquationHolder[0]);
		}
		double storeVal = 0.0;
		for(int i = 1; i < fracEquationHolder.length - 2; i += 2 ){
			double num = 0.0;
			double secondNum = 0.0;
			
			if(fracEquationHolder[i].toUpperCase().charAt(0) >= 'A' && fracEquationHolder[i].toUpperCase().charAt(0) <='L'){
					fracEquationHolder[i] = fracEquationHolder[i].toUpperCase();
	
					SpreadsheetLocation cell = new SpreadsheetLocation(fracEquationHolder[i]);
					if(breadsheet[cell.getRow()][cell.getCol()] instanceof RealCell){
						fracEquationHolder[i] = Double.toString(((RealCell)breadsheet[cell.getRow()][cell.getCol()]).getDoubleValue());
					}else{
						fracEquationHolder[i] = "0.0";
					}

					

			}
			
			if(fracEquationHolder[i+2].toUpperCase().charAt(0) >= 'A' && fracEquationHolder[i+2].toUpperCase().charAt(0) <= 'L'){
					fracEquationHolder[i+2] = fracEquationHolder[i+2].toUpperCase();
					SpreadsheetLocation cell = new SpreadsheetLocation(fracEquationHolder[i + 2]);
				
					if(breadsheet[cell.getRow()][cell.getCol()] instanceof RealCell){
						fracEquationHolder[i+2] = Double.toString(((RealCell)breadsheet[cell.getRow()][cell.getCol()]).getDoubleValue());
						System.out.println("Double value at " + cell.getRow() + "" + cell.getCol() + " " + storeVal);
					}else{
						fracEquationHolder[i+2] = "0.0";
					}
					
			}
			
			num = Double.parseDouble(fracEquationHolder[i]);
			System.out.println(num);
			secondNum = Double.parseDouble(fracEquationHolder[i + 2]);
			System.out.println(secondNum);
			
			if(fracEquationHolder[i + 1].equals("*")){
				storeVal = num * secondNum;
			}else if(fracEquationHolder[i + 1].equals("/")){
				storeVal = num / secondNum;
			}else if(fracEquationHolder[i + 1].equals("+")){
				storeVal = num + secondNum;
			}else{
				storeVal = num - secondNum;
			}
			fracEquationHolder[i+2] = Double.toString(storeVal);
		
		}

		return storeVal;
	}
	
	
	
	@Override
	public String abbreviatedCellText() {
//return super.abbreviatedCellText();
		String answer1 = getDoubleValue() +"";
        int cellValueLength = answer1.length();
		if (cellValueLength < 10){
			while (answer1.length() < 10){
				answer1 += " ";
			}
			return answer1;
		}else if (cellValueLength > 10){
			answer1 = answer1.substring(0, 10);
			return answer1;
		}else{
			return answer1;
		}
	}

	@Override
	public String fullCellText() {
		return super.fullCellText();
	}
}
	