
package textExcel;
 


public class Spreadsheet implements Grid
{
	private Cell[][] emptycell = new Cell[20][12];
	public Spreadsheet(){
		for( int i = 0; i < emptycell.length; i++){
			for (int j = 0; j<emptycell[i].length; j++){
				spreadsheetArr[i][j] = new EmptyCell();
			}
		}
	}
	@Override
	public String processCommand(String command){
		if(command.equalsIgnoreCase("")){
			return "";
		}
		if (command.indexOf(" ") > 0){
			String[] commandBreakdown = command.split(" ", 3);
			if (commandBreakdown.length > 1){
				if (commandBreakdown[1].equals("=")){
					String location = commandBreakdown[0];
					SpreadsheetLocation cellLocation = new SpreadsheetLocation(location);
					int rowNum = cellLocation.getRow();
					int columnNum = cellLocation.getCol();
					if (commandBreakdown[2].substring(commandBreakdown[2].length()-1).equals("%")){
						spreadsheetArr[rowNum][columnNum] = new PercentCell(commandBreakdown[2]);
					} else if(commandBreakdown[2].charAt(0) == '"' && commandBreakdown[2].charAt(commandBreakdown[2].length()-1) == '"'){
						spreadsheetArr[rowNum][columnNum] = new TextCell(commandBreakdown[2].substring(1, commandBreakdown[2].length()-1));
					}else if (commandBreakdown[2].charAt(0) == '(' && commandBreakdown[2].charAt(commandBreakdown[2].length()-1) == ')'){
						spreadsheetArr[rowNum][columnNum] = new FormulaCell(commandBreakdown[2]);
					} else {
						spreadsheetArr[rowNum][columnNum] = new ValueCell(commandBreakdown[2]);
					}
					return (getGridText());
				} else if (commandBreakdown[0].equalsIgnoreCase("clear")){
					SpreadsheetLocation cellLocation = new SpreadsheetLocation(commandBreakdown[1]);
					spreadsheetArr[cellLocation.getRow()][cellLocation.getCol()] = new EmptyCell();
					return (getGridText());
				}
			}
		}else if (command.equalsIgnoreCase("clear")){
			for( int i = 0; i < spreadsheetArr.length; i++){
				for (int j = 0; j<spreadsheetArr[i].length; j++){
					spreadsheetArr[i][j] = new EmptyCell();
				}
			}
			return (getGridText());
		} else if(command.length() < 5){
			SpreadsheetLocation cellLocation = new SpreadsheetLocation(command);
			return (getCell(cellLocation).fullCellText());
		}
		return "";
	}

	@Override
	public int getRows()
	{
		int rowCount = 20;
		return rowCount;
	}

	@Override
	public int getCols()
	{
		int colCount = 12;
		
		return colCount;
	}

	@Override
	public Cell getCell(Location loc)
	{
		return emptycell[loc.getRow()][loc.getCol()];
	}

	@Override
	public String getGridText()
	{
		String tableholder = "";
		tableholder = tableholder + "   |";
		char col = 'A';
		for(int i = 0; i < 12; i++){
			tableholder = tableholder + ((char)(col)) + "         |";
			col = (char) (col +  1);
		}
		for (int i = 0; i < 20; i++){
			tableholder = tableholder +  "\n";
			if(i<9){
				tableholder = tableholder +  (i+1) + "  |";
			}else{
				tableholder = tableholder +  (i+1) + " |"; // remember there is an extra character
			}
			for(int j = 0; j<12 ; j++){
				tableholder = tableholder + emptycell[i][j].abbreviatedCellText() + "|";
			//
			}
		}
		return tableholder + "\n";
	}
}